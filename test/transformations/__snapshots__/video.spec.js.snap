// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Video Transformations angle throws when invalid 1`] = `"Cloudinary Video :: angle a number, received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations aspectRatio throws when invalid 1`] = `"Cloudinary Video :: aspectRatio should be a number or have the form x:y, received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations aspectRatio throws when invalid 2`] = `"Cloudinary Video :: aspectRatio should be a number or have the form x:y, received: '7:' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations background throws when invalid 1`] = `"Cloudinary Video :: background a color, received: 'auto:bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations background throws when invalid 2`] = `"Cloudinary Video :: background a color, received: 'rgb:3020f' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations border throws when invalid 1`] = `"Cloudinary Video :: border should be an object with 'width' & 'color' or a string of the form 'width_style_color', received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations border throws when invalid 2`] = `"Cloudinary Video :: border should contain a 'color' property when provided as an object, received: '{\\"width\\":1}' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations border throws when invalid 3`] = `"Cloudinary Video :: border should be an object with 'width' & 'color' or a string of the form 'width_style_color', received: '1px_solid_rgb:3020f' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations border throws when invalid 4`] = `"Cloudinary Video :: border should be an object with 'width' & 'color' or a string of the form 'width_style_color', received: '1px_solid_rgb:3020ff2' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations color throws when invalid 1`] = `"Cloudinary Video :: color must be a named color, short #rgb[a] or long #rrggbb[aa] hex value, received: 'rgb:30' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations color throws when invalid 2`] = `"Cloudinary Video :: color must be a named color, short #rgb[a] or long #rrggbb[aa] hex value, received: 'rgb:3020f' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations color throws when invalid 3`] = `"Cloudinary Video :: color must be a named color, short #rgb[a] or long #rrggbb[aa] hex value, received: 'rgb:3020ff2' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations color throws when invalid 4`] = `"Cloudinary Video :: color must be a named color, short #rgb[a] or long #rrggbb[aa] hex value, received: 'rgb:3020ff2ff' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations crop throws when invalid 1`] = `"Cloudinary Video :: crop should be one of ['scale', 'fit', 'limit', 'fill', 'pad', 'lpad', 'crop'], received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations crop throws when invalid 2`] = `"Cloudinary Video :: crop should be one of ['scale', 'fit', 'limit', 'fill', 'pad', 'lpad', 'crop'], received: 300 - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations delay throws when invalid 1`] = `"Cloudinary Video :: delay must be a positive number, received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations delay throws when invalid 2`] = `"Cloudinary Video :: delay must be a positive number, received: '-10' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations delay throws when invalid 3`] = `"Cloudinary Video :: delay must be a positive number, received: -10 - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations dpr throws when invalid 1`] = `"Cloudinary Video :: dpr should be \`auto\` or a number greater than 0, received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations dpr throws when invalid 2`] = `"Cloudinary Video :: dpr should be \`auto\` or a number greater than 0, received: -1 - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations dpr throws when invalid 3`] = `"Cloudinary Video :: dpr should be \`auto\` or a number greater than 0, received: 0 - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations flags throws when invalid 1`] = `"Cloudinary Video :: flags should be one of ['awebp', 'animated', 'waveform'], an array of options or '.' separated options, received: '\\"bad\\"' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations flags throws when invalid 2`] = `"Cloudinary Video :: flags should be one of ['awebp', 'animated', 'waveform'], an array of options or '.' separated options, received: '\\"any_format.bad\\"' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations flags throws when invalid 3`] = `"Cloudinary Video :: flags should be one of ['awebp', 'animated', 'waveform'], an array of options or '.' separated options, received: '\\"attachment.bad\\"' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations gravity throws when invalid 1`] = `"Cloudinary Video :: gravity should be one of ['north_east', 'north', 'north_west', 'west', 'south_west', 'south', 'south_east', 'east', 'center'], 'auto', or a string starting with 'auto:', received: 'bad:auto' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations gravity throws when invalid 2`] = `"Cloudinary Video :: gravity should be one of ['north_east', 'north', 'north_west', 'west', 'south_west', 'south', 'south_east', 'east', 'center'], 'auto', or a string starting with 'auto:', received: 'auto-bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations height throws when invalid 1`] = `"Cloudinary Video :: height should be a number, received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations overlay throws when invalid 1`] = `"Cloudinary Video :: text caption required options are 'fontFamily' and 'fontSize', received: '{\\"text\\":\\"No fontFamily\\",\\"fontSize\\":12}' - see http://cloudinary.com/documentation/video_manipulation_and_delivery#adding_text_captions"`;

exports[`Video Transformations overlay throws when invalid 2`] = `"Cloudinary Video :: text caption required options are 'fontFamily' and 'fontSize', received: '{\\"text\\":\\"No fontSize\\",\\"fontFamily\\":\\"Arial\\"}' - see http://cloudinary.com/documentation/video_manipulation_and_delivery#adding_text_captions"`;

exports[`Video Transformations quality throws when invalid 1`] = `"Cloudinary Video :: quality should be one of ['3g2', '3gp', 'avi', 'flv', 'm3u8', 'm2ts', 'mov', 'mkv', 'mp4', 'mpeg', 'mpd', 'ogv', 'webm', 'wmv'], a number between 1 and 100, or have the form x:y, received: 0 - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations quality throws when invalid 2`] = `"Cloudinary Video :: quality should be one of ['3g2', '3gp', 'avi', 'flv', 'm3u8', 'm2ts', 'mov', 'mkv', 'mp4', 'mpeg', 'mpd', 'ogv', 'webm', 'wmv'], a number between 1 and 100, or have the form x:y, received: 105 - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations quality throws when invalid 3`] = `"Cloudinary Video :: quality should be one of ['3g2', '3gp', 'avi', 'flv', 'm3u8', 'm2ts', 'mov', 'mkv', 'mp4', 'mpeg', 'mpd', 'ogv', 'webm', 'wmv'], a number between 1 and 100, or have the form x:y, received: '105' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations quality throws when invalid 4`] = `"Cloudinary Video :: quality should be one of ['3g2', '3gp', 'avi', 'flv', 'm3u8', 'm2ts', 'mov', 'mkv', 'mp4', 'mpeg', 'mpd', 'ogv', 'webm', 'wmv'], a number between 1 and 100, or have the form x:y, received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations quality throws when invalid 5`] = `"Cloudinary Video :: quality should be one of ['3g2', '3gp', 'avi', 'flv', 'm3u8', 'm2ts', 'mov', 'mkv', 'mp4', 'mpeg', 'mpd', 'ogv', 'webm', 'wmv'], a number between 1 and 100, or have the form x:y, received: 'auto:bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations radius throws when invalid 1`] = `"Cloudinary Video :: radius should be a number, 'max' or have the form x[:y[:z[:u]]], received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations radius throws when invalid 2`] = `"Cloudinary Video :: radius should be a number, 'max' or have the form x[:y[:z[:u]]], received: '20:0:40:40:90' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations width throws when invalid 1`] = `"Cloudinary Video :: width should be a number, 'auto', or a string starting with 'auto:', received: 'bad:auto' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations width throws when invalid 2`] = `"Cloudinary Video :: width should be a number, 'auto', or a string starting with 'auto:', received: 'auto-bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations x throws when invalid 1`] = `"Cloudinary Video :: x should be a number, received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;

exports[`Video Transformations y throws when invalid 1`] = `"Cloudinary Video :: y should be a number, received: 'bad' - see http://cloudinary.com/documentation/video_manipulation_and_delivery"`;
