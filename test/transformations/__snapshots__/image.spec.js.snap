// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Image Transformations angle throws when invalid 1`] = `"Cloudinary Image :: angle should be one of ['auto_right', 'auto_left', 'ignore', 'vflip', 'hflip'] or a number, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#angle_parameter"`;

exports[`Image Transformations aspectRatio throws when invalid 1`] = `"Cloudinary Image :: aspectRatio should be a number or have the form x:y, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#aspectRatio_parameter"`;

exports[`Image Transformations aspectRatio throws when invalid 2`] = `"Cloudinary Image :: aspectRatio should be a number or have the form x:y, received: '7:' - see http://cloudinary.com/documentation/image_transformation_reference#aspectRatio_parameter"`;

exports[`Image Transformations background throws when invalid 1`] = `"Cloudinary Image :: background should be one of ['auto:border', 'auto:predominant', 'auto:border_contrast', 'auto:predominant_contrast'] or a color, received: 'auto:bad' - see http://cloudinary.com/documentation/image_transformation_reference#background_parameter"`;

exports[`Image Transformations background throws when invalid 2`] = `"Cloudinary Image :: background should be one of ['auto:border', 'auto:predominant', 'auto:border_contrast', 'auto:predominant_contrast'] or a color, received: 'rgb:3020f' - see http://cloudinary.com/documentation/image_transformation_reference#background_parameter"`;

exports[`Image Transformations border throws when invalid 1`] = `"Cloudinary Image :: border should be an object with 'width' & 'color' or a string of the form 'width_style_color', received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#border_parameter"`;

exports[`Image Transformations border throws when invalid 2`] = `"Cloudinary Image :: border should contain a 'color' property when provided as an object, received: '{\\"width\\":1}' - see http://cloudinary.com/documentation/image_transformation_reference#border_parameter"`;

exports[`Image Transformations border throws when invalid 3`] = `"Cloudinary Image :: border should be an object with 'width' & 'color' or a string of the form 'width_style_color', received: '1px_solid_rgb:3020f' - see http://cloudinary.com/documentation/image_transformation_reference#border_parameter"`;

exports[`Image Transformations border throws when invalid 4`] = `"Cloudinary Image :: border should be an object with 'width' & 'color' or a string of the form 'width_style_color', received: '1px_solid_rgb:3020ff2' - see http://cloudinary.com/documentation/image_transformation_reference#border_parameter"`;

exports[`Image Transformations color throws when invalid 1`] = `"Cloudinary Image :: color must be a named color, short #rgb[a] or long #rrggbb[aa] hex value, received: 'rgb:30' - see http://cloudinary.com/documentation/image_transformation_reference#color_parameter"`;

exports[`Image Transformations color throws when invalid 2`] = `"Cloudinary Image :: color must be a named color, short #rgb[a] or long #rrggbb[aa] hex value, received: 'rgb:3020f' - see http://cloudinary.com/documentation/image_transformation_reference#color_parameter"`;

exports[`Image Transformations color throws when invalid 3`] = `"Cloudinary Image :: color must be a named color, short #rgb[a] or long #rrggbb[aa] hex value, received: 'rgb:3020ff2' - see http://cloudinary.com/documentation/image_transformation_reference#color_parameter"`;

exports[`Image Transformations color throws when invalid 4`] = `"Cloudinary Image :: color must be a named color, short #rgb[a] or long #rrggbb[aa] hex value, received: 'rgb:3020ff2ff' - see http://cloudinary.com/documentation/image_transformation_reference#color_parameter"`;

exports[`Image Transformations colorSpace throws when invalid 1`] = `"Cloudinary Image :: colorSpace should be one of ['srgb', 'tinysrgb', 'no_cmyk'] or 'icc:(public_id)', received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#colorSpace_parameter"`;

exports[`Image Transformations colorSpace throws when invalid 2`] = `"Cloudinary Image :: colorSpace should be one of ['srgb', 'tinysrgb', 'no_cmyk'] or 'icc:(public_id)', received: 'bad:some_id' - see http://cloudinary.com/documentation/image_transformation_reference#colorSpace_parameter"`;

exports[`Image Transformations colorSpace throws when invalid 3`] = `"Cloudinary Image :: colorSpace should be one of ['srgb', 'tinysrgb', 'no_cmyk'] or 'icc:(public_id)', received: 'cs_icc:no_extension' - see http://cloudinary.com/documentation/image_transformation_reference#colorSpace_parameter"`;

exports[`Image Transformations crop throws when invalid 1`] = `"Cloudinary Image :: crop should be one of ['scale', 'fit', 'limit', 'mfit', 'fill', 'lfill', 'pad', 'lpad', 'mpad', 'crop', 'thumb', 'imagga_crop', 'imagga_scale'], received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#crop_parameter"`;

exports[`Image Transformations crop throws when invalid 2`] = `"Cloudinary Image :: crop should be one of ['scale', 'fit', 'limit', 'mfit', 'fill', 'lfill', 'pad', 'lpad', 'mpad', 'crop', 'thumb', 'imagga_crop', 'imagga_scale'], received: 300 - see http://cloudinary.com/documentation/image_transformation_reference#crop_parameter"`;

exports[`Image Transformations defaultImage throws when invalid 1`] = `"Cloudinary Image :: defaultImage must include a file extension which should be one of ['jpg', 'jpe', 'jpeg', 'jpc', 'jp2', 'j2k', 'wdp', 'jxr', 'hdp', 'png', 'gif', 'webp', 'bmp', 'tif', 'tiff', 'ico', 'pdf', 'ps', 'ept', 'eps', 'eps3', 'psd', 'svg', 'ai', 'djvu', 'flif'], received: 'noExtension' - see http://cloudinary.com/documentation/image_transformation_reference#defaultImage_parameter"`;

exports[`Image Transformations defaultImage throws when invalid 2`] = `"Cloudinary Image :: defaultImage must include a file extension which should be one of ['jpg', 'jpe', 'jpeg', 'jpc', 'jp2', 'j2k', 'wdp', 'jxr', 'hdp', 'png', 'gif', 'webp', 'bmp', 'tif', 'tiff', 'ico', 'pdf', 'ps', 'ept', 'eps', 'eps3', 'psd', 'svg', 'ai', 'djvu', 'flif'], received: 'badExtension.abc' - see http://cloudinary.com/documentation/image_transformation_reference#defaultImage_parameter"`;

exports[`Image Transformations delay throws when invalid 1`] = `"Cloudinary Image :: delay must be a positive number, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#delay_parameter"`;

exports[`Image Transformations delay throws when invalid 2`] = `"Cloudinary Image :: delay must be a positive number, received: '-10' - see http://cloudinary.com/documentation/image_transformation_reference#delay_parameter"`;

exports[`Image Transformations delay throws when invalid 3`] = `"Cloudinary Image :: delay must be a positive number, received: -10 - see http://cloudinary.com/documentation/image_transformation_reference#delay_parameter"`;

exports[`Image Transformations density throws when invalid 1`] = `"Cloudinary Image :: density should be a number greater than 0 up to 300, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#density_parameter"`;

exports[`Image Transformations density throws when invalid 2`] = `"Cloudinary Image :: density should be a number greater than 0 up to 300, received: 301 - see http://cloudinary.com/documentation/image_transformation_reference#density_parameter"`;

exports[`Image Transformations density throws when invalid 3`] = `"Cloudinary Image :: density should be a number greater than 0 up to 300, received: -1 - see http://cloudinary.com/documentation/image_transformation_reference#density_parameter"`;

exports[`Image Transformations density throws when invalid 4`] = `"Cloudinary Image :: density should be a number greater than 0 up to 300, received: 0 - see http://cloudinary.com/documentation/image_transformation_reference#density_parameter"`;

exports[`Image Transformations dpr throws when invalid 1`] = `"Cloudinary Image :: dpr should be \`auto\` or a number greater than 0, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#dpr_parameter"`;

exports[`Image Transformations dpr throws when invalid 2`] = `"Cloudinary Image :: dpr should be \`auto\` or a number greater than 0, received: -1 - see http://cloudinary.com/documentation/image_transformation_reference#dpr_parameter"`;

exports[`Image Transformations dpr throws when invalid 3`] = `"Cloudinary Image :: dpr should be \`auto\` or a number greater than 0, received: 0 - see http://cloudinary.com/documentation/image_transformation_reference#dpr_parameter"`;

exports[`Image Transformations fetchFormat throws when invalid 1`] = `"Cloudinary Image :: fetchFormat should be one of ['auto', 'jpg', 'jpe', 'jpeg', 'jpc', 'jp2', 'j2k', 'wdp', 'jxr', 'hdp', 'png', 'gif', 'webp', 'bmp', 'tif', 'tiff', 'ico', 'pdf', 'ps', 'ept', 'eps', 'eps3', 'psd', 'svg', 'ai', 'djvu', 'flif'] or 'auto', received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#fetchFormat_parameter"`;

exports[`Image Transformations flags throws when invalid 1`] = `"Cloudinary Image :: density should be a number greater than 0 up to 300, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#density_parameter"`;

exports[`Image Transformations flags throws when invalid 2`] = `"Cloudinary Image :: density should be a number greater than 0 up to 300, received: any_format,bad - see http://cloudinary.com/documentation/image_transformation_reference#density_parameter"`;

exports[`Image Transformations flags throws when invalid 3`] = `"Cloudinary Image :: density should be a number greater than 0 up to 300, received: 'attachment.bad' - see http://cloudinary.com/documentation/image_transformation_reference#density_parameter"`;

exports[`Image Transformations gravity throws when invalid 1`] = `"Cloudinary Image :: gravity should be one of ['north_west', 'north', 'north_east', 'west', 'center', 'east', 'south_west', 'south', 'south_east', 'xy_center', 'face', 'face:center', 'face:auto', 'faces', 'faces:center', 'faces:auto', 'body', 'body:face', 'ocr_text', 'adv_face', 'adv_faces', 'adv_eyes', 'custom', 'custom:face', 'custom:faces', 'custom:adv_face', 'custom:adv_faces'], 'auto', or a string starting with 'auto:', received: 'bad:auto' - see http://cloudinary.com/documentation/image_transformation_reference#gravity_parameter"`;

exports[`Image Transformations gravity throws when invalid 2`] = `"Cloudinary Image :: gravity should be one of ['north_west', 'north', 'north_east', 'west', 'center', 'east', 'south_west', 'south', 'south_east', 'xy_center', 'face', 'face:center', 'face:auto', 'faces', 'faces:center', 'faces:auto', 'body', 'body:face', 'ocr_text', 'adv_face', 'adv_faces', 'adv_eyes', 'custom', 'custom:face', 'custom:faces', 'custom:adv_face', 'custom:adv_faces'], 'auto', or a string starting with 'auto:', received: 'auto-bad' - see http://cloudinary.com/documentation/image_transformation_reference#gravity_parameter"`;

exports[`Image Transformations height throws when invalid 1`] = `"Cloudinary Image :: height should be a number, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#height_parameter"`;

exports[`Image Transformations opacity throws when invalid 1`] = `"Cloudinary Image :: opacity should be a number between 0 and 100, received: -1 - see http://cloudinary.com/documentation/image_transformation_reference#opacity_parameter"`;

exports[`Image Transformations opacity throws when invalid 2`] = `"Cloudinary Image :: opacity should be a number between 0 and 100, received: 101 - see http://cloudinary.com/documentation/image_transformation_reference#opacity_parameter"`;

exports[`Image Transformations opacity throws when invalid 3`] = `"Cloudinary Image :: opacity should be a number between 0 and 100, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#opacity_parameter"`;

exports[`Image Transformations overlay throws when invalid 1`] = `"Cloudinary Image :: text caption required options are 'fontFamily' and 'fontSize', received: '{\\"text\\":\\"No fontFamily\\",\\"fontSize\\":12}' - see http://cloudinary.com/documentation/image_transformations#adding_text_captions"`;

exports[`Image Transformations overlay throws when invalid 2`] = `"Cloudinary Image :: text caption required options are 'fontFamily' and 'fontSize', received: '{\\"text\\":\\"No fontSize\\",\\"fontFamily\\":\\"Arial\\"}' - see http://cloudinary.com/documentation/image_transformations#adding_text_captions"`;

exports[`Image Transformations page throws when invalid 1`] = `"Cloudinary Image :: page should be an integer greater than 0, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#page_parameter"`;

exports[`Image Transformations page throws when invalid 2`] = `"Cloudinary Image :: page should be an integer greater than 0, received: -1 - see http://cloudinary.com/documentation/image_transformation_reference#page_parameter"`;

exports[`Image Transformations page throws when invalid 3`] = `"Cloudinary Image :: page should be an integer greater than 0, received: 0 - see http://cloudinary.com/documentation/image_transformation_reference#page_parameter"`;

exports[`Image Transformations quality throws when invalid 1`] = `"Cloudinary Image :: quality should be one of ['jpg', 'jpe', 'jpeg', 'jpc', 'jp2', 'j2k', 'wdp', 'jxr', 'hdp', 'png', 'gif', 'webp', 'bmp', 'tif', 'tiff', 'ico', 'pdf', 'ps', 'ept', 'eps', 'eps3', 'psd', 'svg', 'ai', 'djvu', 'flif'], a number between 1 and 100, or have the form x:y, received: 0 - see http://cloudinary.com/documentation/image_transformation_reference#quality_parameter"`;

exports[`Image Transformations quality throws when invalid 2`] = `"Cloudinary Image :: quality should be one of ['jpg', 'jpe', 'jpeg', 'jpc', 'jp2', 'j2k', 'wdp', 'jxr', 'hdp', 'png', 'gif', 'webp', 'bmp', 'tif', 'tiff', 'ico', 'pdf', 'ps', 'ept', 'eps', 'eps3', 'psd', 'svg', 'ai', 'djvu', 'flif'], a number between 1 and 100, or have the form x:y, received: 105 - see http://cloudinary.com/documentation/image_transformation_reference#quality_parameter"`;

exports[`Image Transformations quality throws when invalid 3`] = `"Cloudinary Image :: quality should be one of ['jpg', 'jpe', 'jpeg', 'jpc', 'jp2', 'j2k', 'wdp', 'jxr', 'hdp', 'png', 'gif', 'webp', 'bmp', 'tif', 'tiff', 'ico', 'pdf', 'ps', 'ept', 'eps', 'eps3', 'psd', 'svg', 'ai', 'djvu', 'flif'], a number between 1 and 100, or have the form x:y, received: '105' - see http://cloudinary.com/documentation/image_transformation_reference#quality_parameter"`;

exports[`Image Transformations quality throws when invalid 4`] = `"Cloudinary Image :: quality should be one of ['jpg', 'jpe', 'jpeg', 'jpc', 'jp2', 'j2k', 'wdp', 'jxr', 'hdp', 'png', 'gif', 'webp', 'bmp', 'tif', 'tiff', 'ico', 'pdf', 'ps', 'ept', 'eps', 'eps3', 'psd', 'svg', 'ai', 'djvu', 'flif'], a number between 1 and 100, or have the form x:y, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#quality_parameter"`;

exports[`Image Transformations quality throws when invalid 5`] = `"Cloudinary Image :: quality should be one of ['jpg', 'jpe', 'jpeg', 'jpc', 'jp2', 'j2k', 'wdp', 'jxr', 'hdp', 'png', 'gif', 'webp', 'bmp', 'tif', 'tiff', 'ico', 'pdf', 'ps', 'ept', 'eps', 'eps3', 'psd', 'svg', 'ai', 'djvu', 'flif'], a number between 1 and 100, or have the form x:y, received: 'auto:bad' - see http://cloudinary.com/documentation/image_transformation_reference#quality_parameter"`;

exports[`Image Transformations radius throws when invalid 1`] = `"Cloudinary Image :: radius should be a number, 'max' or have the form x[:y[:z[:u]]], received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#radius_parameter"`;

exports[`Image Transformations radius throws when invalid 2`] = `"Cloudinary Image :: radius should be a number, 'max' or have the form x[:y[:z[:u]]], received: '20:0:40:40:90' - see http://cloudinary.com/documentation/image_transformation_reference#radius_parameter"`;

exports[`Image Transformations underlay throws when invalid 1`] = `"Cloudinary Image :: text caption required options are 'fontFamily' and 'fontSize', received: '{\\"text\\":\\"No fontFamily\\",\\"fontSize\\":12}' - see http://cloudinary.com/documentation/image_transformations#adding_text_captions"`;

exports[`Image Transformations underlay throws when invalid 2`] = `"Cloudinary Image :: text caption required options are 'fontFamily' and 'fontSize', received: '{\\"text\\":\\"No fontSize\\",\\"fontFamily\\":\\"Arial\\"}' - see http://cloudinary.com/documentation/image_transformations#adding_text_captions"`;

exports[`Image Transformations width throws when invalid 1`] = `"Cloudinary Image :: width should be a number, 'auto', or a string starting with 'auto:', received: 'bad:auto' - see http://cloudinary.com/documentation/image_transformation_reference#width_parameter"`;

exports[`Image Transformations width throws when invalid 2`] = `"Cloudinary Image :: width should be a number, 'auto', or a string starting with 'auto:', received: 'auto-bad' - see http://cloudinary.com/documentation/image_transformation_reference#width_parameter"`;

exports[`Image Transformations x throws when invalid 1`] = `"Cloudinary Image :: x should be a number, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#x_parameter"`;

exports[`Image Transformations y throws when invalid 1`] = `"Cloudinary Image :: y should be a number, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#y_parameter"`;

exports[`Image Transformations zoom throws when invalid 1`] = `"Cloudinary Image :: zoom should be a number, received: 'bad' - see http://cloudinary.com/documentation/image_transformation_reference#zoom_parameter"`;
